<?php
/**
 * @file
 * Contains core functions for the Custom Formatters module.
 */

/**
 * Include additional files.
 */
foreach (module_list() as $module) {
  if (file_exists($file = dirname(__FILE__) . "/includes/{$module}.inc")) {
    require_once $file;
  }
}

/**
 * Implements hook_permission().
 */
function custom_formatters_permission() {
  return array(
    'administer custom formatters' => array(
      'title' => t('Administer Custom Formatters'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function custom_formatters_menu() {
  $items = array();

  $items['js/formatters/autocomplete'] = array(
    'title' => 'Formatters autocomplete',
    'file' => 'custom_formatters.inc',
    'file path' => drupal_get_path('module', 'custom_formatters') . '/plugins/export_ui',
    'page callback' => 'custom_formatters_autocomplete',
    'access arguments' => array('administer custom formatters'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function custom_formatters_menu_alter(&$items) {
  $items['admin/structure/formatters/list/%']['context'] = MENU_CONTEXT_INLINE;
}

/**
 * Implements hook_theme().
 */
function custom_formatters_theme() {
  $theme = array();

  $theme['custom_formatters_export_ui_form_preview'] = array(
    'render element' => 'form',
    'file' => 'custom_formatters.inc',
    'path' => drupal_get_path('module', 'custom_formatters') . '/plugins/export_ui'
  );

  return $theme;
}

/**
 *
 */
function custom_formatters_formatter_is_active($formatter) {
  $field_types = drupal_explode_tags($formatter->field_types);
  $field_info = field_info_fields();

  foreach (field_info_instances() as $bundles) {
    foreach ($bundles as $fields) {
      foreach ($fields as $field) {
        if (in_array($field_info[$field['field_name']]['type'], $field_types)) {
          foreach ($field['display'] as $display) {
            if ($display['type'] == "custom_formatters_{$formatter->name}") {
              return TRUE;
            }
          }
        }
      }
    }
  }

  return FALSE;
}

/**
 *
 */
function custom_formatters_crud_load($formatter) {
  $formatters = custom_formatters_crud_load_all();
  return isset($formatters[$formatter]) ? $formatters[$formatter] : NULL;
}

/**
 *
 */
function custom_formatters_crud_load_all($flush_cache = FALSE) {
  static $formatters = array();

  if (!$formatters || $flush_cache) {
    ctools_include('export');
    foreach (ctools_export_crud_load_all('formatters') as $formatter) {
      if (empty($formatter->disabled)) {
        $formatters[$formatter->name] = $formatter;
      }
    }
  }

  return $formatters;
}
